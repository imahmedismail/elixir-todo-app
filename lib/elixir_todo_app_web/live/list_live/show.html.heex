<.header>
  List <%= @list.id %>
  <:subtitle>You can add list items and manage them here</:subtitle>
  <:actions>
    <.link patch={~p"/todo/list/#{@list}/show/edit"} phx-click={JS.push_focus()}>
      <.button>Edit list</.button>
    </.link>
    <.link patch={~p"/todo/list/#{@list}/item/new"} phx-click={JS.push_focus()}>
      <.button>New Item</.button>
    </.link>
  </:actions>
</.header>

<.table id="item" rows={@streams.item_collection}>
  <:col :let={{_id, item}} label="List ID"><%= item.todo_list_id %></:col>
  <:col :let={{_id, item}} label="Content"><%= item.content %></:col>
  <:col :let={{_id, item}} label="Is Completed?"><%= item.completed %></:col>
  <:action :let={{_id, item}}>
    <.link patch={~p"/todo/list/#{item.id}/item/edit"}>Edit</.link>
  </:action>
</.table>

<.back navigate={~p"/todo/list"}>Back to list</.back>

<.modal
  :if={@live_action == :edit}
  id="list-modal"
  show
  on_cancel={JS.patch(~p"/todo/list/#{@list}")}
>
  <.live_component
    module={ElixirTodoAppWeb.ListLive.FormComponent}
    id={@list.id}
    title={@page_title}
    action={@live_action}
    list={@list}
    patch={~p"/todo/list/#{@list}"}
  />
</.modal>

<.modal
  :if={@live_action in [:new_item, :edit_item]}
  id="item-modal"
  show
  on_cancel={JS.patch(~p"/todo/list/#{@list}")}
>
  <.live_component
    module={ElixirTodoAppWeb.ListLive.ItemComponent}
    id={@item.id || :new_item}
    title={@page_title}
    action={@live_action}
    list={@list}
    item={@item}
    patch={~p"/todo/list/#{@list}"}
  />
</.modal>
